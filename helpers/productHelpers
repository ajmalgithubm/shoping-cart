const connection = require('../config/connection');
const collection = require('../config/collection');
const database = require('../config/database')
 var {ObjectId} = require('mongodb');
module.exports = {
    addProduct: (product, done) => {
        connection.connect((client) => {
            if (client) {
                client.db(database.databaseName).collection(collection.PRODUCT_COLLECTION).insertOne(product).then((doc) =>{
                    done(doc)
                    client.close()
                }).catch(err => {
                    console.log('error when insert item', err);
                    client.close()
                })
            }else{
                done(false)
            }
        })
    },
    getAllProduct:(done) => {
        connection.connect((client) => {
            if (client) {
                client.db(database.databaseName).collection(collection.PRODUCT_COLLECTION).find().toArray().then((doc) => {
                    done(doc)
                    client.close()
                }).catch(err=> {
                    done(false)
                    client.close()
                })
            } else {
                done(false)
            }
        })
    },     
    deleteProduct: (proId, callback) => {
        connection.connect((client) => {
            if (client) {
                client.db(database.databaseName).collection(collection.PRODUCT_COLLECTION).deleteOne({ _id: new ObjectId(proId) }).then((doc) => {
                    console.log(doc);
                    callback(true)
                    client.close()
                }).catch(err => {
                    console.log("error while deleting", err);
                    callback(false)
                    client.close()
                })
            } else {
                callback(false)
            }
        })
    },
    getProductDetails:(proId, callback)=>{
        connection.connect((client) => {
            if(client){
                client.db(database.databaseName).collection(collection.PRODUCT_COLLECTION).findOne({_id:new ObjectId(proId)}).then((doc) =>{
                    callback(doc)
                    client.close()
                }).catch(err => {
                    console.log("error when retriving the product details", err);
                    client.close()
                })
            }else{
                callback(false)
            }
        })
    },
    updateProduct:(proId,data, callback)=> {
        connection.connect((client) => {
            if(client){
                client.db(database.databaseName).collection(collection.PRODUCT_COLLECTION).updateOne({_id:new ObjectId(proId)}, {
                    $set:{
                        name:data.name
                    }
                }).then((doc) => {
                    callback(true)
                    client.close()
                }).catch(err => {
                    console.log("error", err);
                    client.close()
                })
            }else{
                callback(false)
            }
        })
    }

} 